package db;
// Generated Feb 19, 2018 3:42:49 AM by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * TbPageAuthenticationHasTbFuntionAuthentication generated by hbm2java
 */
@Entity
@Table(name="tb_page_authentication_has_tb_funtion_authentication"
    ,catalog="db_epacs_n31589a3a33c5dca256m8650910ed"
)
public class TbPageAuthenticationHasTbFuntionAuthentication  implements java.io.Serializable {


     private Integer pafaId;
     private TbFuntionAuthentication tbFuntionAuthentication;
     private TbUserRole tbUserRole;
     private String pafaStatus;

    public TbPageAuthenticationHasTbFuntionAuthentication() {
    }

	
    public TbPageAuthenticationHasTbFuntionAuthentication(TbFuntionAuthentication tbFuntionAuthentication, TbUserRole tbUserRole) {
        this.tbFuntionAuthentication = tbFuntionAuthentication;
        this.tbUserRole = tbUserRole;
    }
    public TbPageAuthenticationHasTbFuntionAuthentication(TbFuntionAuthentication tbFuntionAuthentication, TbUserRole tbUserRole, String pafaStatus) {
       this.tbFuntionAuthentication = tbFuntionAuthentication;
       this.tbUserRole = tbUserRole;
       this.pafaStatus = pafaStatus;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="pafa_id", unique=true, nullable=false)
    public Integer getPafaId() {
        return this.pafaId;
    }
    
    public void setPafaId(Integer pafaId) {
        this.pafaId = pafaId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tb_funtion_authentication_fa_id", nullable=false)
    public TbFuntionAuthentication getTbFuntionAuthentication() {
        return this.tbFuntionAuthentication;
    }
    
    public void setTbFuntionAuthentication(TbFuntionAuthentication tbFuntionAuthentication) {
        this.tbFuntionAuthentication = tbFuntionAuthentication;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tb_user_role_ur_id", nullable=false)
    public TbUserRole getTbUserRole() {
        return this.tbUserRole;
    }
    
    public void setTbUserRole(TbUserRole tbUserRole) {
        this.tbUserRole = tbUserRole;
    }

    
    @Column(name="pafa_status", length=45)
    public String getPafaStatus() {
        return this.pafaStatus;
    }
    
    public void setPafaStatus(String pafaStatus) {
        this.pafaStatus = pafaStatus;
    }




}


