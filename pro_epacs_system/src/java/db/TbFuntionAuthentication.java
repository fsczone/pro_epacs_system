package db;
// Generated Feb 19, 2018 3:42:49 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TbFuntionAuthentication generated by hbm2java
 */
@Entity
@Table(name="tb_funtion_authentication"
    ,catalog="db_epacs_n31589a3a33c5dca256m8650910ed"
)
public class TbFuntionAuthentication  implements java.io.Serializable {


     private Integer faId;
     private String faFuntionTitle;
     private String faStatus;
     private Set<TbPageAuthenticationHasTbFuntionAuthentication> tbPageAuthenticationHasTbFuntionAuthentications = new HashSet<TbPageAuthenticationHasTbFuntionAuthentication>(0);

    public TbFuntionAuthentication() {
    }

    public TbFuntionAuthentication(String faFuntionTitle, String faStatus, Set<TbPageAuthenticationHasTbFuntionAuthentication> tbPageAuthenticationHasTbFuntionAuthentications) {
       this.faFuntionTitle = faFuntionTitle;
       this.faStatus = faStatus;
       this.tbPageAuthenticationHasTbFuntionAuthentications = tbPageAuthenticationHasTbFuntionAuthentications;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="fa_id", unique=true, nullable=false)
    public Integer getFaId() {
        return this.faId;
    }
    
    public void setFaId(Integer faId) {
        this.faId = faId;
    }

    
    @Column(name="fa_funtion_title", length=100)
    public String getFaFuntionTitle() {
        return this.faFuntionTitle;
    }
    
    public void setFaFuntionTitle(String faFuntionTitle) {
        this.faFuntionTitle = faFuntionTitle;
    }

    
    @Column(name="fa_status", length=45)
    public String getFaStatus() {
        return this.faStatus;
    }
    
    public void setFaStatus(String faStatus) {
        this.faStatus = faStatus;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="tbFuntionAuthentication")
    public Set<TbPageAuthenticationHasTbFuntionAuthentication> getTbPageAuthenticationHasTbFuntionAuthentications() {
        return this.tbPageAuthenticationHasTbFuntionAuthentications;
    }
    
    public void setTbPageAuthenticationHasTbFuntionAuthentications(Set<TbPageAuthenticationHasTbFuntionAuthentication> tbPageAuthenticationHasTbFuntionAuthentications) {
        this.tbPageAuthenticationHasTbFuntionAuthentications = tbPageAuthenticationHasTbFuntionAuthentications;
    }




}


